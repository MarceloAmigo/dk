#!/bin/bash
#
#  dockerc
#
VERSION="v0.9.6 25/04/2020"




SOFT=$(diff -q  /usr/bin/dockerc <(wget -q -O- https://raw.githubusercontent.com/uGeek/dockerc/master/dockerc 2>/dev/null))

if [ "$(cat ~/.config/dockerc/last.log 2>/dev/null)" != "$(date +"%Y%m%d")" ]
then
echo $(date +"%Y%m%d") >  ~/.config/dockerc/last.log
if [ "$SOFT" = "" ]
then
echo "" 2>/dev/null
else
echo
echo -e "\n\e[31mHay una nueva actualización de la aplicación\e[0m \e[1mdockerc\e[0m\n\t\e[92mva a procederse la instalación\e[0m\n"
sudo curl -L https://raw.githubusercontent.com/uGeek/dockerc/master/dockerc \
          -o /usr/bin/dockerc && sudo chmod +x /usr/bin/dockerc
clear	  
echo -e "\n\t\e[1mdockerc.\e[0m \e[92mVersión $(wget -q -O- https://raw.githubusercontent.com/uGeek/dockerc/master/dockerc | grep "^VERSION=" | cut -d "=" -f2 | sed s'|"||'g) actualizada con éxito! \e[0m\n"	  
exit 0
fi
fi




if [ ! -f ~/.config/dockerc/dockerc.conf ]; then
    while true; do
        echo ""
        read -rp "El archivo de configuración no está creado, ¿Quieres crearlo ahora? (s/n) " yn
        case "${yn}" in
            [Ss]* ) mkdir -p  ~/.config/dockerc/
		    echo -en "\n Escribe la ruta completa del directorio donde tienes o quieres guardar tus docker-dotfile \n\n\t Ejemplo: /home/usuario/dockerc: "
		    read RUTA ; echo "RUTA_DOCKER_DOTFILE='"$RUTA"'" > ~/.config/dockerc/dockerc.conf
		    echo -en "\n ¿Que editor de texto quieres utilizar? \n\n\t Ejemplo: vim: "
		    read EDITOR ; echo "EDITOR='"$EDITOR"'" >> ~/.config/dockerc/dockerc.conf
		    break;;
            [Nn]* ) exit;;
            * ) echo "Please answer y or n";;
        esac
    done
fi

source ~/.config/dockerc/dockerc.conf

if [ "$1" = "-v" ] || [ "$1" = "--version" ]  
then
echo "$VERSION"
exit
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]  
then
echo "
Modo de empleo: dockerc [OPCIONES]

dk                 -> Menú para crear un contendor guardado con docker o docker-compose
dk   s             -> Menú para ver un contendor guardado con docker o docker-compose  
dk   a             -> Automontaje de todos los dockers de un grupo
dk   n             -> Guarda un nuevo docker
dk   i             -> Imagenes listadas por creación
dk   u, up, start  -> Lista dockers con su número para iniciar
dk   d, down, stop -> Lista dockers corriendo, con su número para detener
dk   c,    ls      -> Dockers que están corriendo y sus puertos
dk   c -a ,ls -a   -> Todos los Dockers disponibles
dk  -h, --help     -> Ayuda


dockerc "$VERSION"
 Copyright (C) 2020 Angel. uGeek
 ugeekpodcast@gmail.com"
exit
fi

if [ "$1" = "a" ]
then
clear
echo ""
echo "Listado de grupo de dockers disponibles"
echo ""
echo ""
ls -1F $RUTA_DOCKER_DOTFILE/ | grep '/$' | sed s'|/||'g
echo ""
echo -n "Selecciona el grupo de dockers de automontaje: " ; read GRUPO
echo " "
cat $RUTA_DOCKER_DOTFILE/$GRUPO/*.docker > ~/.config/dockerc/dockerc.automount
/bin/bash ~/.config/dockerc/dockerc.automount
exit
fi

if [ "$1" = "i" ]
then
echo "--------"
echo "IMAGENES"
echo "--------"
docker images --format 'table {{.CreatedSince}}\t{{.Repository}}:{{.Tag}}\t{{.Size}}'
echo ""
echo "    $(docker images --format 'table {{.CreatedSince}}\t{{.Repository}}:{{.Tag}}\t{{.Size}}' | tail -n +2 | wc -l) Imagenes en total"
echo ""
exit
fi

if [ "$1" = "ls" ] && [ "$2" = "-a" ] ||  [ "$1" = "c" ] && [ "$2" = "-a" ] 
then    
echo "----------------------"
echo "CONTAINERS DISPONIBLES"
echo "----------------------"
docker ps -a --format 'table {{.Names}}' |  sed 's|NAMES||g' | sort | sed '/^ *#/d; /^ *$/d' | nl 2>/dev/null
echo ""
exit
fi

if [ "$1" = "ls" ] || [ "$1" = "c" ]  
then
echo "----------------------------------"
echo "CONTAINERS CORRIENDO Y SUS PUERTOS"    
echo "----------------------------------"
docker ps --format 'table {{.Names}}\t{{.Ports}}' |  sed 's|NAMES||g' |  sed 's|PORTS||g' | sort | sed '/^ *#/d; /^ *$/d' | nl 2>/dev/null
echo ""
exit
fi

if [ "$1" = "u" ] || [ "$1" = "start" ] || [ "$1" = "up" ] 
then
echo "----------------------"
echo "CONTAINERS DISPONIBLES"    
echo "----------------------"
docker ps -a --format 'table {{.Names}}' |  sed 's|NAMES||g' |  sed 's|PORTS||g' | sort | sed '/^ *#/d; /^ *$/d' | nl 2>/dev/null
docker ps -a --format 'table {{.Names}}' |  sed 's|NAMES||g' |  sed 's|PORTS||g' | sort | sed '/^ *#/d; /^ *$/d' > ~/.config/dockerc/up.dockerc
echo ""
echo -en "    Selecciona el número de contenedor que quieres iniciar: "
read CONTENEDOR
CONTENEDORUP=$(cat ~/.config/dockerc/up.dockerc | sed -n ""$CONTENEDOR""p)
echo ""
echo "    Contenedor $(docker start "$CONTENEDORUP") iniciado"
echo ""
exit
fi


if [ "$1" = "d" ] || [ "$1" = "stop" ] || [ "$1" = "down" ] 
then
echo "--------------------"
echo "CONTAINERS CORRIENDO"    
echo "--------------------"
docker ps --format 'table {{.Names}}' |  sed 's|NAMES||g' |  sed 's|PORTS||g' | sort | sed '/^ *#/d; /^ *$/d' | nl 2>/dev/null
docker ps --format 'table {{.Names}}' |  sed 's|NAMES||g' |  sed 's|PORTS||g' | sort | sed '/^ *#/d; /^ *$/d' > ~/.config/dockerc/down.dockerc
echo ""
echo -en "    Selecciona el número de contenedor que quieres detener: "
read CONTENEDOR
CONTENEDORUP=$(cat ~/.config/dockerc/down.dockerc | sed -n ""$CONTENEDOR""p)
echo ""
echo "    Detenido el contenedor $(docker stop "$CONTENEDORUP")"
echo ""
exit
fi


if [ "$1" = "n" ] 
then

clear
echo ""
echo "Vamos a guardar un nuevo docker."
echo ""
echo "---------------------------------------"
echo "Listado de grupo de dockers disponibles"
echo "---------------------------------------"
echo ""
ls -1F $RUTA_DOCKER_DOTFILE/ | grep '/$' | sed s'|/||'g
echo ""
echo ""
echo -n " ¿A que grupo pertenece?: "  ; read GRUPO
mkdir -p $RUTA_DOCKER_DOTFILE/$GRUPO/
clear
echo  " "
echo -n " ¿Cual es el nombre del docker que quieres crear?: "  ; read NOMBRE
$EDITOR $RUTA_DOCKER_DOTFILE/$GRUPO/$NOMBRE.docker
clear
echo "El docker $NOMBRE ha sido guardado con éxito!!!"
exit
fi

if [ "$1" = "s" ] 
then
clear
echo ""
echo "---------------------------------------"
echo "Listado de grupo de dockers disponibles"
echo "---------------------------------------"
echo ""
ls -1F $RUTA_DOCKER_DOTFILE/ | grep '/$' | sed s'|/||'g
echo ""
echo -n "Selecciona el grupo de dockers deseado: " ; read GRUPO
echo " "

clear
echo ""
echo "-----------------------------------"
echo "Listado de contenedores disponibles"
echo "-----------------------------------"
echo ""
ls -1 $RUTA_DOCKER_DOTFILE/$GRUPO/*.docker | cut -d "." -f1 | sed s'|'$RUTA_DOCKER_DOTFILE/$GRUPO'/||'g
echo " "
echo -n "  Escribe el nombre del docker que deseas montar: " ; read DOCKER
cat $RUTA_DOCKER_DOTFILE/$GRUPO/$DOCKER.docker
echo ""
exit
fi


clear
echo ""
echo "---------------------------------------"
echo "Listado de grupo de dockers disponibles"
echo "---------------------------------------"
echo ""
ls -1F $RUTA_DOCKER_DOTFILE/ | grep '/$' | sed s'|/||'g
echo ""
echo -n "Selecciona el grupo de dockers deseado: " ; read GRUPO
echo " "

clear
echo ""
echo "-----------------------------------"
echo "Listado de contenedores disponibles"
echo "-----------------------------------"
echo ""
ls -1 $RUTA_DOCKER_DOTFILE/$GRUPO/*.docker | cut -d "." -f1 | sed s'|'$RUTA_DOCKER_DOTFILE/$GRUPO'/||'g
echo " "
echo -n "  Escribe el nombre del docker que deseas montar: " ; read DOCKER
$EDITOR $RUTA_DOCKER_DOTFILE/$GRUPO/$DOCKER.docker
clear
echo "Creando el Contenedor "$DOCKER"..."
echo " "
/bin/bash $RUTA_DOCKER_DOTFILE/$GRUPO/$DOCKER.docker
